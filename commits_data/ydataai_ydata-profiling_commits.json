{
  "repo_name": "ydataai/ydata-profiling",
  "commits": [
    {
      "sha": "aba4cf38dffcd6f6a8719ea4dca27f005e8934cb",
      "message": "Change KeyError to IndexError",
      "changes": [
        {
          "file": "pandas_profiling/__init__.py",
          "patch": "@@ -62,7 +62,7 @@ def describe_numeric_1d(series, base_stats):\n         # Large histogram\n         imgdata = StringIO.StringIO()\n         plot = series.plot(kind='hist', figsize=(6, 4),\n-                           facecolor='#348ABD')  # TODO when running on server, send this off to a different thread\n+                           facecolor='#337ab7')  # TODO when running on server, send this off to a different thread\n         plot.figure.subplots_adjust(left=0.15, right=0.95, top=0.9, bottom=0.1, wspace=0, hspace=0)\n         plot.figure.savefig(imgdata)\n         imgdata.seek(0)\n@@ -71,7 +71,7 @@ def describe_numeric_1d(series, base_stats):\n \n         # Small histogram\n         imgdata = StringIO.StringIO()\n-        plot = series.plot(kind='hist', figsize=(2, 0.75), facecolor='#999999')\n+        plot = series.plot(kind='hist', figsize=(2, 0.75), facecolor='#337ab7')\n         plot.axes.get_yaxis().set_visible(False)\n         plot.set_axis_bgcolor(\"w\")\n         xticks = plot.xaxis.get_major_ticks()\n@@ -208,7 +208,7 @@ def freq_table(freqtable, n, table_template, row_template, max_number_of_items_i\n         max_freq = max(freqtable.values[0], freq_other, freq_missing)\n         try:\n             min_freq = freqtable.values[max_number_of_items_in_table]\n-        except KeyError:\n+        except IndexError:\n             min_freq = 0\n \n         # TODO: Correctly sort missing and other"
        }
      ]
    }
  ]
}